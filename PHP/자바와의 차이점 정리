php 포인트
1. + 대신 .으로 str 간 연결
2. 디버깅 할 때 var_dump()쓰면 됨
3. 숫자가 들어있는 문자열을 계산하면 숫자부분만 뽑아내 계산. 문자열과 수치 비교할 때 문자열의 맨 앞에 숫자가 아닌 경우나 숫자가 없는 경우 문자열은 0으로 된 상태로 수치랑 비교가 됨.
4. 수치도 .으로 연결 가능
5. 스위치문에서 default 생략 가능
6. 표준 함수는 소문자로 호출하는 것이 관례
7. 함수 정의할 때 인수에 초기값을 넣은 매개인자는 초기값이 없는 매개인자 보다 뒤에 위치해야 한다.
8. 초기값이 없는 매개인자도 호출 시 값을 생략할 수는 있음. 근데 이럴 경우 에러날 가능성이 높을텐데?
9. 인수의 개수를 고정하고 싶지 않을 때는 변수명 앞에 ...을 붙임.
10. 매개인자에 형을 안 붙일 수도 있네...
11. 반환값의 형을 지정할 수 있음. ex) function twice(float $var):int {$var *=2 return $var}
12. 함수 안에 변수는 밖의 변수를 그대로 사용 못함. 쓰려면 매개인자를 보내든가 해야함. 왜 그런가? 하나의 클래스에서 사용하는게 아니라 스크립트전체에서 쓰는거기 때문(자바스크립트랑 차이점)
13. 전역 변수를 사용하기 위해선 지역 안에서 global을 변수명 앞에 붙여줘야 함.
14. 인수의 개수를 정해놓지 않은 함수가 인자를 파악하기 위해 쓰는 함수 3개. func_get_args(), func_num_args(), func_get_arg(몇번째)
15. 가변 변수: 변수에 $를 하나 더 붙이면 변수에 들어가 있는 값을 이름으로 한 새로운 변수를 만듦.
16. 가변 함수: 문자열로 함수를 실행. 문자열 뒤에 ()만 붙여서 씀. 근데 쓰기 전에 function_exists()함수로 확인 해야 함.
17. 부모의 범위에 있는 변수를 익명 함수에서 사용하려면 use($arg)를 써서 익명함수로 변수를 전달. function() use ($arg){}
18. 문자열 안에 변수를 넣고 싶거나 개행 등 특수문자를 넣고 싶으면 ""를 써라.
19. 문자열 안에서 공백없이 변수 넣으려면 중괄호{}로 감싸 넣는다.
20. $기호를 단독으로 쓰려면 이스케이프문으로 쓸 수 있음
21. 히어 다큐먼트: <<< "식별자" ~~문자열~~ 개행 후 바로 "식별자"; 문장 안에 변수가 값이 보여짐
22. Nowdoc: <<< '식별자' ~~문자열~~ 개행 후 바로 '식별자'; 문장 안에 변수가 변수명으로 보여짐, 이스케이프 적용 안 됨.
23. 문자 수 확인: mb_strlen
24. 문자열 추출: mb_substr
25. URL 인코딩: rawurlencode()는 공백을 %20으로 변환. urlencode()는 공백은 +로 변환. 디코딩은 en->dn
26. 발견된 위치부터 그 이후의 모든 문자열 추출: mb_stristr()
27. 검색해 일치하면 바꿈: str_replace(검색어, 바꿀어, 원본, 바꾼개수 담을 변수) 케이스 구분 안 하고 찾으려면 str_ireplace(검색어, 바꿀어, 원본, 바꾼개수 담을 변수) 이 때 검색어와 바꿀어에 배열을 넣으면 여러개 검색, 여러개 바꿈 가능
28. 배열 2종류: 인덱스배열, 연관배열 = 배열에 키값형태로 넣으려면 ['key' => 'value', 'key2' => 2]
29. 배열의 크기 알아볼 땐 count(배열)로
30. 배열에 값 추가는 그냥 새로운 값을 배열에 대입하면 됨. 또는 인덱스 번호로 추가할 수 있음.
31. 문자열을 배열로 만듦: explode(구분자, 문자열)
32. 배열을 문자열로 만듦: implode(",",배열)
33. 배열 삭제: array_splice(배열, 시작, 길이) 여기서 길이를 0으로 하고 4번째 인자로 대체 배열을 넣으면 치환됨.
34. 배열 맨 앞/뒤 값 꺼내기: array_shift(), array_pop()
35. 배열 간 연결:
	1. + 연산자로 연결 => 첫 배열이 먼저 위치되고 두번째 배열이 만약 첫번째 보다 크면 첫번째 배열 끝난 후 뒤에 그 인덱스 이후의 요소들이 붙음.
	2. array_merge(arg1, arg2) => 생각했던 쭉 이어지는 연결, 연관 배열에서 쓸 때 중복되는 키가 있으면 뒤에 걸로 적용
	3. array_merge_recursive => 연관 배열에서 중복되는 값도 다중배열로 집어 넣음.
	4. array_combine => 배열 두개로 연관 배열 만듦. 첫번째가 배열이 키, 두번째 배열이 값
	5. array_unique => 배열에서 중복된 값 제거
	6. array_slice(배열, 시작, 길이, 인덱스 유지여부) => 배열 잘라냄.
36. foreach($array as $value){}
37. foreach($array as $key => $value){}
38. array_filter(배열, 콜백함수)
39. 인덱스 배열의 값들을 변수에 전개하기: list($var1, $var2, $var3) = $array
40. sort() 인덱스 배열을 오름차순 정렬, rsort() 내림차순 정렬
41. in_array($val, $arr) 배열에 값이 있는지 확인 ;
42. preg_grep(pattern, $array) 정규표현식 사용해 배열 검색
43. 트레이트(trait)에서 프로퍼티나 메서드를 정의하고 클래스를 처음 정의할 때 use 키워드로 트레이트를 지정하면 그 트레이트의 코드를 자신의 클래스에서 사용 가능.
44. 메서드의 접근권한을 생략하면 public임.
45. 클래스의 프로퍼티나 메서드 접근할 때 -> 사용. class->propertie 나 class->method()
46. 생성자를 사용할 때 function __construct(art1, ar2, ...) 로 만들 수 있음.
47. 클래스 파일에서는 마지막에 ?>를 적지 않는다.
48. 외부의 클래스 파일을 사용하기 위해선 require_once를 사용. include, include_once, require 등도 있으나 오류발생 시 처리와 한번만 읽기 위해 require_once 사용
49. 클래스는 인스턴스의 것이 아닌 자신의 클래스 프로퍼티랑 클래스 메서드를 정의할 수 있음. static을 붙여 만들고. 사용 시에는 self::키워드를 변수 앞에 붙임
50. 외부에서 클래스 멤버를 사용하려면 클래스명::클래스멤버 와 같이 접근
51. 부모클래스랑 자식클래스의 생성자 매개인자가 다를 경우 자식클래스 생성자에서 parent::__construct(arg); 와 같이 해줘야 함. 
52. 트레이트 사용 시 트레이트에 정의된 함수 등은 $this-> 로 사용함
53. 트레이트 여러 개 사용 시 메서드 명이 겹칠 수 있는데, 이때 명시적으로 어떤 트레이트를 사용할 지 선언 하고 뒤에 'insteadof 안쓰는 트레이트' 를 붙여주면 된다.
54. 또는 선언할 때 트레이트명::메서드 as 별명 과 같이 선언해주어 사용할 수 있다. 
